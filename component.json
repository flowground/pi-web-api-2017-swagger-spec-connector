{
    "title": "PI Web API 2017 Swagger Spec",
    "description": "Swagger Spec file that describes PI Web API",
    "docsUrl": "",
    "url": "https://devdata.osisoft.com/piwebapi",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://devdata.osisoft.com/piwebapi",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "Home_Get": {
            "main": "./lib/actions/Home_Get.js",
            "title": "Get top level links for this PI System Web API instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Home_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_GetByPath": {
            "main": "./lib/actions/Analysis_GetByPath.js",
            "title": "Retrieve an Analysis by path.",
            "description": "This method returns an Analysis based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_Delete": {
            "main": "./lib/actions/Analysis_Delete.js",
            "title": "Delete an Analysis.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_Get": {
            "main": "./lib/actions/Analysis_Get.js",
            "title": "Retrieve an Analysis.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_Update": {
            "main": "./lib/actions/Analysis_Update.js",
            "title": "Update an Analysis.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_GetCategories": {
            "main": "./lib/actions/Analysis_GetCategories.js",
            "title": "Get an Analysis' categories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_GetCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_GetSecurity": {
            "main": "./lib/actions/Analysis_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the Analysis for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_GetSecurityEntries": {
            "main": "./lib/actions/Analysis_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the analysis based on the specified criteria. By default, all security entries for this analysis are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_CreateSecurityEntry": {
            "main": "./lib/actions/Analysis_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the analysis.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_DeleteSecurityEntry": {
            "main": "./lib/actions/Analysis_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the analysis.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_GetSecurityEntryByName": {
            "main": "./lib/actions/Analysis_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the analysis with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Analysis_UpdateSecurityEntry": {
            "main": "./lib/actions/Analysis_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the analysis.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Analysis_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisCategory_GetByPath": {
            "main": "./lib/actions/AnalysisCategory_GetByPath.js",
            "title": "Retrieve an analysis category by path.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisCategory_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisCategory_Delete": {
            "main": "./lib/actions/AnalysisCategory_Delete.js",
            "title": "Delete an analysis category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisCategory_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisCategory_Get": {
            "main": "./lib/actions/AnalysisCategory_Get.js",
            "title": "Retrieve an analysis category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisCategory_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisCategory_Update": {
            "main": "./lib/actions/AnalysisCategory_Update.js",
            "title": "Update an analysis category by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisCategory_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisCategory_GetSecurity": {
            "main": "./lib/actions/AnalysisCategory_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the analysis category for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisCategory_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisCategory_GetSecurityEntries": {
            "main": "./lib/actions/AnalysisCategory_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the analysis category based on the specified criteria. By default, all security entries for this analysis category are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisCategory_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisCategory_CreateSecurityEntry": {
            "main": "./lib/actions/AnalysisCategory_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the analysis category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisCategory_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisCategory_DeleteSecurityEntry": {
            "main": "./lib/actions/AnalysisCategory_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the analysis category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisCategory_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisCategory_GetSecurityEntryByName": {
            "main": "./lib/actions/AnalysisCategory_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the analysis category with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisCategory_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisCategory_UpdateSecurityEntry": {
            "main": "./lib/actions/AnalysisCategory_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the analysis category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisCategory_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisRulePlugIn_GetByPath": {
            "main": "./lib/actions/AnalysisRulePlugIn_GetByPath.js",
            "title": "Retrieve an Analysis Rule Plug-in by path.",
            "description": "This method returns an Analysis Rule Plug-in based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisRulePlugIn_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisRulePlugIn_Get": {
            "main": "./lib/actions/AnalysisRulePlugIn_Get.js",
            "title": "Retrieve an Analysis Rule Plug-in.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisRulePlugIn_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisRule_GetByPath": {
            "main": "./lib/actions/AnalysisRule_GetByPath.js",
            "title": "Retrieve an Analysis Rule by path.",
            "description": "This method returns an Analysis Rule based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisRule_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisRule_Delete": {
            "main": "./lib/actions/AnalysisRule_Delete.js",
            "title": "Delete an Analysis Rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisRule_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisRule_Get": {
            "main": "./lib/actions/AnalysisRule_Get.js",
            "title": "Retrieve an Analysis Rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisRule_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisRule_Update": {
            "main": "./lib/actions/AnalysisRule_Update.js",
            "title": "Update an Analysis Rule by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisRule_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisRule_GetAnalysisRules": {
            "main": "./lib/actions/AnalysisRule_GetAnalysisRules.js",
            "title": "Get the child Analysis Rules of the Analysis Rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisRule_GetAnalysisRules.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisRule_CreateAnalysisRule": {
            "main": "./lib/actions/AnalysisRule_CreateAnalysisRule.js",
            "title": "Create a new Analysis Rule as a child of an existing Analysis Rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisRule_CreateAnalysisRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_GetByPath": {
            "main": "./lib/actions/AnalysisTemplate_GetByPath.js",
            "title": "Retrieve an analysis template by path.",
            "description": "This method returns an analysis template based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_CreateFromAnalysis": {
            "main": "./lib/actions/AnalysisTemplate_CreateFromAnalysis.js",
            "title": "Create an Analysis template based upon a specified Analysis.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_CreateFromAnalysis.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_Delete": {
            "main": "./lib/actions/AnalysisTemplate_Delete.js",
            "title": "Delete an analysis template.",
            "description": "Deleting an analysis template will delete any anlysis which was created from it, unless the analysis is tied to a notification.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_Get": {
            "main": "./lib/actions/AnalysisTemplate_Get.js",
            "title": "Retrieve an analysis template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_Update": {
            "main": "./lib/actions/AnalysisTemplate_Update.js",
            "title": "Update an analysis template by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_GetCategories": {
            "main": "./lib/actions/AnalysisTemplate_GetCategories.js",
            "title": "Get an analysis template's categories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_GetCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_GetSecurity": {
            "main": "./lib/actions/AnalysisTemplate_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the analysis template for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_GetSecurityEntries": {
            "main": "./lib/actions/AnalysisTemplate_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the analysis template based on the specified criteria. By default, all security entries for this analysis template are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_CreateSecurityEntry": {
            "main": "./lib/actions/AnalysisTemplate_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the analysis template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_DeleteSecurityEntry": {
            "main": "./lib/actions/AnalysisTemplate_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the analysis template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_GetSecurityEntryByName": {
            "main": "./lib/actions/AnalysisTemplate_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the analysis template with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AnalysisTemplate_UpdateSecurityEntry": {
            "main": "./lib/actions/AnalysisTemplate_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the analysis template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AnalysisTemplate_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetByPath": {
            "main": "./lib/actions/AssetDatabase_GetByPath.js",
            "title": "Retrieve an Asset Database by path.",
            "description": "This method returns an asset database based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_Delete": {
            "main": "./lib/actions/AssetDatabase_Delete.js",
            "title": "Delete an asset database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_Get": {
            "main": "./lib/actions/AssetDatabase_Get.js",
            "title": "Retrieve an Asset Database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_Update": {
            "main": "./lib/actions/AssetDatabase_Update.js",
            "title": "Update an asset database by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_FindAnalyses": {
            "main": "./lib/actions/AssetDatabase_FindAnalyses.js",
            "title": "Retrieve analyses based on the specified conditions.",
            "description": "Users can search for the analyses based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the analyses that match the default search.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_FindAnalyses.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetAnalysisCategories": {
            "main": "./lib/actions/AssetDatabase_GetAnalysisCategories.js",
            "title": "Retrieve analysis categories for a given Asset Database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetAnalysisCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateAnalysisCategory": {
            "main": "./lib/actions/AssetDatabase_CreateAnalysisCategory.js",
            "title": "Create an analysis category at the Asset Database root.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateAnalysisCategory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetAnalysisTemplates": {
            "main": "./lib/actions/AssetDatabase_GetAnalysisTemplates.js",
            "title": "Retrieve analysis templates based on the specified criteria. By default, all analysis templates in the specified Asset Database are returned.",
            "description": "Users can search for the analysis templates based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the templates that match the default search.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetAnalysisTemplates.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateAnalysisTemplate": {
            "main": "./lib/actions/AssetDatabase_CreateAnalysisTemplate.js",
            "title": "Create an analysis template at the Asset Database root.",
            "description": "Analyses that are based on an analysis template will inherit characteristics defined in the template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateAnalysisTemplate.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetAttributeCategories": {
            "main": "./lib/actions/AssetDatabase_GetAttributeCategories.js",
            "title": "Retrieve attribute categories for a given Asset Database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetAttributeCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateAttributeCategory": {
            "main": "./lib/actions/AssetDatabase_CreateAttributeCategory.js",
            "title": "Create an attribute category at the Asset Database root.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateAttributeCategory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_FindElementAttributes": {
            "main": "./lib/actions/AssetDatabase_FindElementAttributes.js",
            "title": "Retrieves a list of element attributes matching the specified filters from the specified asset database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_FindElementAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetElementCategories": {
            "main": "./lib/actions/AssetDatabase_GetElementCategories.js",
            "title": "Retrieve element categories for a given Asset Database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetElementCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateElementCategory": {
            "main": "./lib/actions/AssetDatabase_CreateElementCategory.js",
            "title": "Create an element category at the Asset Database root.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateElementCategory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetElements": {
            "main": "./lib/actions/AssetDatabase_GetElements.js",
            "title": "Retrieve elements based on the specified conditions. By default, this method selects immediate children of the specified asset database.",
            "description": "Users can search for the elements based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the elements that match the default search.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetElements.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateElement": {
            "main": "./lib/actions/AssetDatabase_CreateElement.js",
            "title": "Create a child element.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateElement.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetElementTemplates": {
            "main": "./lib/actions/AssetDatabase_GetElementTemplates.js",
            "title": "Retrieve element templates based on the specified criteria. Only templates of instance type \"Element\" and \"EventFrame\" are returned. By default, all element and event frame templates in the specified Asset Database are returned.",
            "description": "Users can search for the element and event frame template based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the templates that match the default search.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetElementTemplates.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateElementTemplate": {
            "main": "./lib/actions/AssetDatabase_CreateElementTemplate.js",
            "title": "Create a template at the Asset Database root. Specify InstanceType of \"Element\" or \"EventFrame\" to create element or event frame template respectively. Only these two types of templates can be created.",
            "description": "Elements and event frames that are based on an element template will inherit characteristics defined in the template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateElementTemplate.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetEnumerationSets": {
            "main": "./lib/actions/AssetDatabase_GetEnumerationSets.js",
            "title": "Retrieve enumeration sets for given asset database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetEnumerationSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateEnumerationSet": {
            "main": "./lib/actions/AssetDatabase_CreateEnumerationSet.js",
            "title": "Create an enumeration set at the Asset Database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateEnumerationSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_FindEventFrameAttributes": {
            "main": "./lib/actions/AssetDatabase_FindEventFrameAttributes.js",
            "title": "Retrieves a list of event frame attributes matching the specified filters from the specified asset database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_FindEventFrameAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetEventFrames": {
            "main": "./lib/actions/AssetDatabase_GetEventFrames.js",
            "title": "Retrieve event frames based on the specified conditions. By default, returns all children of the specified root resource with a start time in the past 8 hours.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetEventFrames.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateEventFrame": {
            "main": "./lib/actions/AssetDatabase_CreateEventFrame.js",
            "title": "Create an event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateEventFrame.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_Export": {
            "main": "./lib/actions/AssetDatabase_Export.js",
            "title": "Export the asset database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_Export.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_Import": {
            "main": "./lib/actions/AssetDatabase_Import.js",
            "title": "Import an asset database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_Import.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_RemoveReferencedElement": {
            "main": "./lib/actions/AssetDatabase_RemoveReferencedElement.js",
            "title": "Remove a reference to an existing element from the specified database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_RemoveReferencedElement.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetReferencedElements": {
            "main": "./lib/actions/AssetDatabase_GetReferencedElements.js",
            "title": "Retrieve referenced elements based on the specified conditions. By default, this method selects all referenced elements at the root level of the asset database.",
            "description": "Users can search for the referenced elements based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the elements that match the default search.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetReferencedElements.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_AddReferencedElement": {
            "main": "./lib/actions/AssetDatabase_AddReferencedElement.js",
            "title": "Add a reference to an existing element to the specified database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_AddReferencedElement.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetSecurity": {
            "main": "./lib/actions/AssetDatabase_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the asset database for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetSecurityEntries": {
            "main": "./lib/actions/AssetDatabase_GetSecurityEntries.js",
            "title": "Retrieve the security entries of the specified security item associated with the asset database based on the specified criteria. By default, all security entries for this asset database are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateSecurityEntry": {
            "main": "./lib/actions/AssetDatabase_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the asset database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_DeleteSecurityEntry": {
            "main": "./lib/actions/AssetDatabase_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the asset database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetSecurityEntryByName": {
            "main": "./lib/actions/AssetDatabase_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry of the specified security item associated with the asset database with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_UpdateSecurityEntry": {
            "main": "./lib/actions/AssetDatabase_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the asset database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetTableCategories": {
            "main": "./lib/actions/AssetDatabase_GetTableCategories.js",
            "title": "Retrieve table categories for a given Asset Database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetTableCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateTableCategory": {
            "main": "./lib/actions/AssetDatabase_CreateTableCategory.js",
            "title": "Create a table category on the Asset Database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateTableCategory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_GetTables": {
            "main": "./lib/actions/AssetDatabase_GetTables.js",
            "title": "Retrieve tables for given Asset Database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_GetTables.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetDatabase_CreateTable": {
            "main": "./lib/actions/AssetDatabase_CreateTable.js",
            "title": "Create a table on the Asset Database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetDatabase_CreateTable.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_List": {
            "main": "./lib/actions/AssetServer_List.js",
            "title": "Retrieve a list of all Asset Servers known to this service.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_List.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetByName": {
            "main": "./lib/actions/AssetServer_GetByName.js",
            "title": "Retrieve an Asset Server by name.",
            "description": "This method returns an asset server based on the name associated with it. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetByPath": {
            "main": "./lib/actions/AssetServer_GetByPath.js",
            "title": "Retrieve an Asset Server by path.",
            "description": "This method returns an asset server based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_Get": {
            "main": "./lib/actions/AssetServer_Get.js",
            "title": "Retrieve an Asset Server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetAnalysisRulePlugIns": {
            "main": "./lib/actions/AssetServer_GetAnalysisRulePlugIns.js",
            "title": "Retrieve a list of all Analysis Rule Plug-in's.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetAnalysisRulePlugIns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetDatabases": {
            "main": "./lib/actions/AssetServer_GetDatabases.js",
            "title": "Retrieve a list of all Asset Databases on the specified Asset Server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetDatabases.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_CreateAssetDatabase": {
            "main": "./lib/actions/AssetServer_CreateAssetDatabase.js",
            "title": "Create an asset database.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_CreateAssetDatabase.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetSecurity": {
            "main": "./lib/actions/AssetServer_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the asset server for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetSecurityEntries": {
            "main": "./lib/actions/AssetServer_GetSecurityEntries.js",
            "title": "Retrieve the security entries of the specified security item associated with the asset server based on the specified criteria. By default, all security entries for this asset server are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_CreateSecurityEntry": {
            "main": "./lib/actions/AssetServer_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the asset server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_DeleteSecurityEntry": {
            "main": "./lib/actions/AssetServer_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the asset server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetSecurityEntryByName": {
            "main": "./lib/actions/AssetServer_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry of the specified security item associated with the asset server with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_UpdateSecurityEntry": {
            "main": "./lib/actions/AssetServer_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the asset server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetSecurityIdentities": {
            "main": "./lib/actions/AssetServer_GetSecurityIdentities.js",
            "title": "Retrieve security identities based on the specified criteria. By default, all security identities in the specified Asset Server are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetSecurityIdentities.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_CreateSecurityIdentity": {
            "main": "./lib/actions/AssetServer_CreateSecurityIdentity.js",
            "title": "Create a security identity.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_CreateSecurityIdentity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetSecurityIdentitiesForUser": {
            "main": "./lib/actions/AssetServer_GetSecurityIdentitiesForUser.js",
            "title": "Retrieve security identities for a specific user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetSecurityIdentitiesForUser.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetSecurityMappings": {
            "main": "./lib/actions/AssetServer_GetSecurityMappings.js",
            "title": "Retrieve security mappings based on the specified criteria. By default, all security mappings in the specified Asset Server are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetSecurityMappings.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_CreateSecurityMapping": {
            "main": "./lib/actions/AssetServer_CreateSecurityMapping.js",
            "title": "Create a security mapping.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_CreateSecurityMapping.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetTimeRulePlugIns": {
            "main": "./lib/actions/AssetServer_GetTimeRulePlugIns.js",
            "title": "Retrieve a list of all Time Rule Plug-in's.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetTimeRulePlugIns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_GetUnitClasses": {
            "main": "./lib/actions/AssetServer_GetUnitClasses.js",
            "title": "Retrieve a list of all unit classes on the specified Asset Server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_GetUnitClasses.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssetServer_CreateUnitClass": {
            "main": "./lib/actions/AssetServer_CreateUnitClass.js",
            "title": "Create a unit class in the specified Asset Server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssetServer_CreateUnitClass.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeCategory_GetByPath": {
            "main": "./lib/actions/AttributeCategory_GetByPath.js",
            "title": "Retrieve an attribute category by path.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeCategory_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeCategory_Delete": {
            "main": "./lib/actions/AttributeCategory_Delete.js",
            "title": "Delete an attribute category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeCategory_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeCategory_Get": {
            "main": "./lib/actions/AttributeCategory_Get.js",
            "title": "Retrieve an attribute category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeCategory_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeCategory_Update": {
            "main": "./lib/actions/AttributeCategory_Update.js",
            "title": "Update an attribute category by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeCategory_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeCategory_GetSecurity": {
            "main": "./lib/actions/AttributeCategory_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the attribute category for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeCategory_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeCategory_GetSecurityEntries": {
            "main": "./lib/actions/AttributeCategory_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the attribute category based on the specified criteria. By default, all security entries for this attribute category are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeCategory_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeCategory_CreateSecurityEntry": {
            "main": "./lib/actions/AttributeCategory_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the attribute category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeCategory_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeCategory_DeleteSecurityEntry": {
            "main": "./lib/actions/AttributeCategory_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the attribute category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeCategory_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeCategory_GetSecurityEntryByName": {
            "main": "./lib/actions/AttributeCategory_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the attribute category with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeCategory_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeCategory_UpdateSecurityEntry": {
            "main": "./lib/actions/AttributeCategory_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the attribute category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeCategory_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_GetByPath": {
            "main": "./lib/actions/Attribute_GetByPath.js",
            "title": "Retrieve an attribute by path.",
            "description": "This method returns an attribute based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_GetMultiple": {
            "main": "./lib/actions/Attribute_GetMultiple.js",
            "title": "Retrieve multiple attributes by web id or path.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_GetMultiple.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_Delete": {
            "main": "./lib/actions/Attribute_Delete.js",
            "title": "Delete an attribute.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_Get": {
            "main": "./lib/actions/Attribute_Get.js",
            "title": "Retrieve an attribute.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_Update": {
            "main": "./lib/actions/Attribute_Update.js",
            "title": "Update an attribute by replacing items in its definition.",
            "description": "If an attribute is based on a template, the user must make sure to update the attribute appropriately so that it does not conflict with the template's design. Once a template is applied to an attribute, it can not be changed.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_GetAttributes": {
            "main": "./lib/actions/Attribute_GetAttributes.js",
            "title": "Get the child attributes of the specified attribute.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_GetAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_CreateAttribute": {
            "main": "./lib/actions/Attribute_CreateAttribute.js",
            "title": "Create a new attribute as a child of the specified attribute.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_CreateAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_GetCategories": {
            "main": "./lib/actions/Attribute_GetCategories.js",
            "title": "Get an attribute's categories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_GetCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_CreateConfig": {
            "main": "./lib/actions/Attribute_CreateConfig.js",
            "title": "Create or update an attribute's DataReference configuration (Create/Update PI point for PI Point DataReference).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_CreateConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_GetValue": {
            "main": "./lib/actions/Attribute_GetValue.js",
            "title": "Get the attribute's value. This call is intended for use with attributes that have no data reference only. For attributes with a data reference, consult the documentation for Streams.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_GetValue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Attribute_SetValue": {
            "main": "./lib/actions/Attribute_SetValue.js",
            "title": "Set the value of a configuration item attribute. For attributes with a data reference or non-configuration item attributes, consult the documentation for streams.",
            "description": "Users must be aware of the value type that the attribute takes before changing the value. If a value entered by the user does not match the value type expressed in the attribute, it will not work or it will return an error. Users should also be careful of what the value type means, for instance, if a value type accepts strings and the user enters a number, the attribute will interpret it as a string of characters and not as the integer value that the user may have wanted.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Attribute_SetValue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeTemplate_GetByPath": {
            "main": "./lib/actions/AttributeTemplate_GetByPath.js",
            "title": "Retrieve an attribute template by path.",
            "description": "This method returns an attribute template based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeTemplate_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeTemplate_Delete": {
            "main": "./lib/actions/AttributeTemplate_Delete.js",
            "title": "Delete an attribute template.",
            "description": "Deleting an attribute template will delete the attributes that were created based on the template",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeTemplate_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeTemplate_Get": {
            "main": "./lib/actions/AttributeTemplate_Get.js",
            "title": "Retrieve an attribute template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeTemplate_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeTemplate_Update": {
            "main": "./lib/actions/AttributeTemplate_Update.js",
            "title": "Update an existing attribute template by replacing items in its definition.",
            "description": "Updating an attribute template will propagate changes to the attributes that were created based on the template",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeTemplate_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeTemplate_GetAttributeTemplates": {
            "main": "./lib/actions/AttributeTemplate_GetAttributeTemplates.js",
            "title": "Retrieve an attribute template's child attribute templates.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeTemplate_GetAttributeTemplates.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeTemplate_CreateAttributeTemplate": {
            "main": "./lib/actions/AttributeTemplate_CreateAttributeTemplate.js",
            "title": "Create an attribute template as a child of another attribute template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeTemplate_CreateAttributeTemplate.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeTemplate_GetCategories": {
            "main": "./lib/actions/AttributeTemplate_GetCategories.js",
            "title": "Get an attribute template's categories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeTemplate_GetCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeTrait_GetByCategory": {
            "main": "./lib/actions/AttributeTrait_GetByCategory.js",
            "title": "Retrieve all attribute traits of the specified category/categories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeTrait_GetByCategory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttributeTrait_Get": {
            "main": "./lib/actions/AttributeTrait_Get.js",
            "title": "Retrieve an attribute trait.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttributeTrait_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Batch_Execute": {
            "main": "./lib/actions/Batch_Execute.js",
            "title": "Execute a batch of requests against the service. As shown in the Sample Request, the input is a dictionary with IDs as keys and request objects as values. Each request object specifies the HTTP method and the resource and, optionally, the content and a list of parent IDs. The list of parent IDs specifies which other requests must complete before the given request will be executed. The example first creates an element, then gets the element by the response's Location header, then creates an attribute for the element. Note that the resource can be an absolute URL or a JsonPath that references the response to the parent request. The batch's response is a dictionary uses keys corresponding those provided in the request, with response objects containing a status code, response headers, and the response body. A request can alternatively specify a request template in place of a resource. In this case, a single JsonPath may select multiple tokens, and a separate subrequest will be made from the template for each token. The responses of these subrequests will returned as the content of a single outer response.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Batch_Execute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Calculation_GetAtIntervals": {
            "main": "./lib/actions/Calculation_GetAtIntervals.js",
            "title": "Returns results of evaluating the expression over the time range from the start time to the end time at a defined interval.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Calculation_GetAtIntervals.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Calculation_GetAtRecorded": {
            "main": "./lib/actions/Calculation_GetAtRecorded.js",
            "title": "Returns the result of evaluating the expression at each point in time over the time range from the start time to the end time where a recorded value exists for a member of the expression.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Calculation_GetAtRecorded.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Calculation_GetSummary": {
            "main": "./lib/actions/Calculation_GetSummary.js",
            "title": "Returns the result of evaluating the expression over the time range from the start time to the end time. The time range is first divided into a number of summary intervals. Then the calculation is performed for the specified summaries over each interval.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Calculation_GetSummary.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Calculation_GetAtTimes": {
            "main": "./lib/actions/Calculation_GetAtTimes.js",
            "title": "Returns the result of evaluating the expression at the specified timestamps.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Calculation_GetAtTimes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Channel_Instances": {
            "main": "./lib/actions/Channel_Instances.js",
            "title": "Retrieves a list of currently running channel instances.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Channel_Instances.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DataServer_List": {
            "main": "./lib/actions/DataServer_List.js",
            "title": "Retrieve a list of Data Servers known to this service.",
            "description": "This method returns a list of all available known Data Servers that the user can connect to. Even though a server may be returned in the list, the user may not have permission to access it.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DataServer_List.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DataServer_GetByName": {
            "main": "./lib/actions/DataServer_GetByName.js",
            "title": "Retrieve a Data Server by name.",
            "description": "This method returns a data server based on the name. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DataServer_GetByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DataServer_GetByPath": {
            "main": "./lib/actions/DataServer_GetByPath.js",
            "title": "Retrieve a Data Server by path.",
            "description": "This method returns a data server based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DataServer_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DataServer_Get": {
            "main": "./lib/actions/DataServer_Get.js",
            "title": "Retrieve a Data Server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DataServer_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DataServer_GetEnumerationSets": {
            "main": "./lib/actions/DataServer_GetEnumerationSets.js",
            "title": "Retrieve enumeration sets for given Data Server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DataServer_GetEnumerationSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DataServer_CreateEnumerationSet": {
            "main": "./lib/actions/DataServer_CreateEnumerationSet.js",
            "title": "Create an enumeration set on the Data Server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/DataServer_CreateEnumerationSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DataServer_GetPoints": {
            "main": "./lib/actions/DataServer_GetPoints.js",
            "title": "Retrieve a list of points on a specified Data Server.",
            "description": "Users can search for the data servers based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the data servers that match the default search.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DataServer_GetPoints.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DataServer_CreatePoint": {
            "main": "./lib/actions/DataServer_CreatePoint.js",
            "title": "Create a point in the specified Data Server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/DataServer_CreatePoint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementCategory_GetByPath": {
            "main": "./lib/actions/ElementCategory_GetByPath.js",
            "title": "Retrieve an element category by path.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementCategory_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementCategory_Delete": {
            "main": "./lib/actions/ElementCategory_Delete.js",
            "title": "Delete an element category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementCategory_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementCategory_Get": {
            "main": "./lib/actions/ElementCategory_Get.js",
            "title": "Retrieve an element category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementCategory_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementCategory_Update": {
            "main": "./lib/actions/ElementCategory_Update.js",
            "title": "Update an element category by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementCategory_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementCategory_GetSecurity": {
            "main": "./lib/actions/ElementCategory_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the element category for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementCategory_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementCategory_GetSecurityEntries": {
            "main": "./lib/actions/ElementCategory_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the element category based on the specified criteria. By default, all security entries for this element category are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementCategory_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementCategory_CreateSecurityEntry": {
            "main": "./lib/actions/ElementCategory_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the element category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementCategory_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementCategory_DeleteSecurityEntry": {
            "main": "./lib/actions/ElementCategory_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the element category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementCategory_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementCategory_GetSecurityEntryByName": {
            "main": "./lib/actions/ElementCategory_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the element category with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementCategory_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementCategory_UpdateSecurityEntry": {
            "main": "./lib/actions/ElementCategory_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the element category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementCategory_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetByPath": {
            "main": "./lib/actions/Element_GetByPath.js",
            "title": "Retrieve an element by path.",
            "description": "This method returns an element based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetMultiple": {
            "main": "./lib/actions/Element_GetMultiple.js",
            "title": "Retrieve multiple elements by web id or path.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetMultiple.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_CreateSearchByAttribute": {
            "main": "./lib/actions/Element_CreateSearchByAttribute.js",
            "title": "Create a link for a \"Search Elements By Attribute Value\" operation, whose queries are specified in the request content. The SearchRoot is specified by the Web Id of the root Element. If the SearchRoot is not specified, then the search starts at the Asset Database. ElementTemplate must be provided as the Web ID of the ElementTemplate, which are used to create the Elements. All the attributes in the queries must be defined as AttributeTemplates on the ElementTemplate. An array of attribute value queries are ANDed together to find the desired Element objects. At least one value query must be specified. There are limitations on SearchOperators.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_CreateSearchByAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_ExecuteSearchByAttribute": {
            "main": "./lib/actions/Element_ExecuteSearchByAttribute.js",
            "title": "Execute a \"Search Elements By Attribute Value\" operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_ExecuteSearchByAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_Delete": {
            "main": "./lib/actions/Element_Delete.js",
            "title": "Delete an element.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_Get": {
            "main": "./lib/actions/Element_Get.js",
            "title": "Retrieve an element.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_Update": {
            "main": "./lib/actions/Element_Update.js",
            "title": "Update an element by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetAnalyses": {
            "main": "./lib/actions/Element_GetAnalyses.js",
            "title": "Retrieve analyses based on the specified conditions.",
            "description": "Users can search for the analyses based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the analyses that match the default search.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetAnalyses.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_CreateAnalysis": {
            "main": "./lib/actions/Element_CreateAnalysis.js",
            "title": "Create an Analysis.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_CreateAnalysis.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetAttributes": {
            "main": "./lib/actions/Element_GetAttributes.js",
            "title": "Get the attributes of the specified element.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_CreateAttribute": {
            "main": "./lib/actions/Element_CreateAttribute.js",
            "title": "Create a new attribute of the specified element.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_CreateAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetCategories": {
            "main": "./lib/actions/Element_GetCategories.js",
            "title": "Get an element's categories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_CreateConfig": {
            "main": "./lib/actions/Element_CreateConfig.js",
            "title": "Executes the create configuration function of the data references found within the attributes of the element, and optionally, its children.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_CreateConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_FindElementAttributes": {
            "main": "./lib/actions/Element_FindElementAttributes.js",
            "title": "Retrieves a list of element attributes matching the specified filters from the specified element.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_FindElementAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetElements": {
            "main": "./lib/actions/Element_GetElements.js",
            "title": "Retrieve elements based on the specified conditions. By default, this method selects immediate children of the specified element.",
            "description": "Users can search for the elements based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the elements that match the default search.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetElements.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_CreateElement": {
            "main": "./lib/actions/Element_CreateElement.js",
            "title": "Create a child element.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_CreateElement.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetEventFrames": {
            "main": "./lib/actions/Element_GetEventFrames.js",
            "title": "Retrieve event frames that reference this element based on the specified conditions. By default, returns all event frames that reference this element with a start time in the past 8 hours.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetEventFrames.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_RemoveReferencedElement": {
            "main": "./lib/actions/Element_RemoveReferencedElement.js",
            "title": "Remove a reference to an existing element from the child elements collection.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_RemoveReferencedElement.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetReferencedElements": {
            "main": "./lib/actions/Element_GetReferencedElements.js",
            "title": "Retrieve referenced elements based on the specified conditions. By default, this method selects all referenced elements of the current resource.",
            "description": "Users can search for the referenced elements based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the elements that match the default search.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetReferencedElements.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_AddReferencedElement": {
            "main": "./lib/actions/Element_AddReferencedElement.js",
            "title": "Add a reference to an existing element to the child elements collection.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_AddReferencedElement.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetSecurity": {
            "main": "./lib/actions/Element_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the element for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetSecurityEntries": {
            "main": "./lib/actions/Element_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the element based on the specified criteria. By default, all security entries for this element are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_CreateSecurityEntry": {
            "main": "./lib/actions/Element_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the element.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_DeleteSecurityEntry": {
            "main": "./lib/actions/Element_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the element.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_GetSecurityEntryByName": {
            "main": "./lib/actions/Element_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the element with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Element_UpdateSecurityEntry": {
            "main": "./lib/actions/Element_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the element.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Element_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_GetByPath": {
            "main": "./lib/actions/ElementTemplate_GetByPath.js",
            "title": "Retrieve an element template by path.",
            "description": "This method returns an element template based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_Delete": {
            "main": "./lib/actions/ElementTemplate_Delete.js",
            "title": "Delete an element template.",
            "description": "Deleting an element template will delete all associated templated data from elements which were created from it.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_Get": {
            "main": "./lib/actions/ElementTemplate_Get.js",
            "title": "Retrieve an element template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_Update": {
            "main": "./lib/actions/ElementTemplate_Update.js",
            "title": "Update an element template by replacing items in its definition.",
            "description": "Updating the InstanceType property of an element template will not affect any elements that have already been created from this template; it will only affect any future elements created from this template. All other changes will be propagated to elements based on this template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_GetAnalysisTemplates": {
            "main": "./lib/actions/ElementTemplate_GetAnalysisTemplates.js",
            "title": "Get analysis templates for an element template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_GetAnalysisTemplates.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_GetAttributeTemplates": {
            "main": "./lib/actions/ElementTemplate_GetAttributeTemplates.js",
            "title": "Get child attribute templates for an element template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_GetAttributeTemplates.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_CreateAttributeTemplate": {
            "main": "./lib/actions/ElementTemplate_CreateAttributeTemplate.js",
            "title": "Create an attribute template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_CreateAttributeTemplate.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_GetCategories": {
            "main": "./lib/actions/ElementTemplate_GetCategories.js",
            "title": "Get an element template's categories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_GetCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_GetSecurity": {
            "main": "./lib/actions/ElementTemplate_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the element template for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_GetSecurityEntries": {
            "main": "./lib/actions/ElementTemplate_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the element template based on the specified criteria. By default, all security entries for this element template are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_CreateSecurityEntry": {
            "main": "./lib/actions/ElementTemplate_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the element template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_DeleteSecurityEntry": {
            "main": "./lib/actions/ElementTemplate_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the element template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_GetSecurityEntryByName": {
            "main": "./lib/actions/ElementTemplate_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the element template with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ElementTemplate_UpdateSecurityEntry": {
            "main": "./lib/actions/ElementTemplate_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the element template.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/ElementTemplate_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_GetByPath": {
            "main": "./lib/actions/EnumerationSet_GetByPath.js",
            "title": "Retrieve an enumeration set by path.",
            "description": "This method returns an enumeration set based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_Delete": {
            "main": "./lib/actions/EnumerationSet_Delete.js",
            "title": "Delete an enumeration set.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_Get": {
            "main": "./lib/actions/EnumerationSet_Get.js",
            "title": "Retrieve an enumeration set.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_Update": {
            "main": "./lib/actions/EnumerationSet_Update.js",
            "title": "Update an enumeration set by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_GetValues": {
            "main": "./lib/actions/EnumerationSet_GetValues.js",
            "title": "Retrieve an enumeration set's values.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_GetValues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_CreateValue": {
            "main": "./lib/actions/EnumerationSet_CreateValue.js",
            "title": "Create an enumeration value for a enumeration set.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_CreateValue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_GetSecurity": {
            "main": "./lib/actions/EnumerationSet_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the enumeration set for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_GetSecurityEntries": {
            "main": "./lib/actions/EnumerationSet_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the enumeration set based on the specified criteria. By default, all security entries for this enumeration set are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_CreateSecurityEntry": {
            "main": "./lib/actions/EnumerationSet_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the enumeration set.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_DeleteSecurityEntry": {
            "main": "./lib/actions/EnumerationSet_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the enumeration set.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_GetSecurityEntryByName": {
            "main": "./lib/actions/EnumerationSet_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the enumeration set with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationSet_UpdateSecurityEntry": {
            "main": "./lib/actions/EnumerationSet_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the enumeration set.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationSet_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationValue_GetByPath": {
            "main": "./lib/actions/EnumerationValue_GetByPath.js",
            "title": "Retrieve an enumeration value by path.",
            "description": "This method returns a enumeration value based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationValue_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationValue_DeleteEnumerationValue": {
            "main": "./lib/actions/EnumerationValue_DeleteEnumerationValue.js",
            "title": "Delete an enumeration value from an enumeration set.",
            "description": "Deleting a value will remove it from the enumeration set along with any value references within the PI Web API system.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationValue_DeleteEnumerationValue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationValue_Get": {
            "main": "./lib/actions/EnumerationValue_Get.js",
            "title": "Retrieve an enumeration value mapping",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationValue_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnumerationValue_UpdateEnumerationValue": {
            "main": "./lib/actions/EnumerationValue_UpdateEnumerationValue.js",
            "title": "Update an enumeration value by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnumerationValue_UpdateEnumerationValue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetByPath": {
            "main": "./lib/actions/EventFrame_GetByPath.js",
            "title": "Retrieve an event frame by path.",
            "description": "This method returns an event frame based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetMultiple": {
            "main": "./lib/actions/EventFrame_GetMultiple.js",
            "title": "Retrieve multiple event frames by web ids or paths.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetMultiple.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_CreateSearchByAttribute": {
            "main": "./lib/actions/EventFrame_CreateSearchByAttribute.js",
            "title": "Create a link for a \"Search EventFrames By Attribute Value\" operation, whose queries are specified in the request content. The SearchRoot is specified by the Web Id of the root EventFrame. If the SearchRoot is not specified, then the search starts at the Asset Database. ElementTemplate must be provided as the Web ID of the ElementTemplate, which are used to create the EventFrames. All the attributes in the queries must be defined as AttributeTemplates on the ElementTemplate. An array of attribute value queries are ANDed together to find the desired Element objects. At least one value query must be specified. There are limitations on SearchOperators.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_CreateSearchByAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_ExecuteSearchByAttribute": {
            "main": "./lib/actions/EventFrame_ExecuteSearchByAttribute.js",
            "title": "Execute a \"Search EventFrames By Attribute Value\" operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_ExecuteSearchByAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_Delete": {
            "main": "./lib/actions/EventFrame_Delete.js",
            "title": "Delete an event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_Get": {
            "main": "./lib/actions/EventFrame_Get.js",
            "title": "Retrieve an event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_Update": {
            "main": "./lib/actions/EventFrame_Update.js",
            "title": "Update an event frame by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_Acknowledge": {
            "main": "./lib/actions/EventFrame_Acknowledge.js",
            "title": "Calls the EventFrame's Acknowledge method.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_Acknowledge.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetAnnotations": {
            "main": "./lib/actions/EventFrame_GetAnnotations.js",
            "title": "Get an event frame's annotations.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetAnnotations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_CreateAnnotation": {
            "main": "./lib/actions/EventFrame_CreateAnnotation.js",
            "title": "Create an annotation on an event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_CreateAnnotation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_DeleteAnnotation": {
            "main": "./lib/actions/EventFrame_DeleteAnnotation.js",
            "title": "Delete an annotation on an event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_DeleteAnnotation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetAnnotationById": {
            "main": "./lib/actions/EventFrame_GetAnnotationById.js",
            "title": "Get a specific annotation on an event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetAnnotationById.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_UpdateAnnotation": {
            "main": "./lib/actions/EventFrame_UpdateAnnotation.js",
            "title": "Update an annotation on an event frame by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_UpdateAnnotation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetAttributes": {
            "main": "./lib/actions/EventFrame_GetAttributes.js",
            "title": "Get the attributes of the specified event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_CreateAttribute": {
            "main": "./lib/actions/EventFrame_CreateAttribute.js",
            "title": "Create a new attribute of the specified event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_CreateAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_CaptureValues": {
            "main": "./lib/actions/EventFrame_CaptureValues.js",
            "title": "Calls the EventFrame's CaptureValues method.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_CaptureValues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetCategories": {
            "main": "./lib/actions/EventFrame_GetCategories.js",
            "title": "Get an event frame's categories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_CreateConfig": {
            "main": "./lib/actions/EventFrame_CreateConfig.js",
            "title": "Executes the create configuration function of the data references found within the attributes of the event frame, and optionally, its children.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_CreateConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_FindEventFrameAttributes": {
            "main": "./lib/actions/EventFrame_FindEventFrameAttributes.js",
            "title": "Retrieves a list of event frame attributes matching the specified filters from the specified event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_FindEventFrameAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetEventFrames": {
            "main": "./lib/actions/EventFrame_GetEventFrames.js",
            "title": "Retrieve event frames based on the specified conditions. By default, returns all children of the specified root event frame with a start time in the past 8 hours.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetEventFrames.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_CreateEventFrame": {
            "main": "./lib/actions/EventFrame_CreateEventFrame.js",
            "title": "Create an event frame as a child of the specified event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_CreateEventFrame.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetReferencedElements": {
            "main": "./lib/actions/EventFrame_GetReferencedElements.js",
            "title": "Retrieve the event frame's referenced elements.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetReferencedElements.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetSecurity": {
            "main": "./lib/actions/EventFrame_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the event frame for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetSecurityEntries": {
            "main": "./lib/actions/EventFrame_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the event frame based on the specified criteria. By default, all security entries for this event frame are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_CreateSecurityEntry": {
            "main": "./lib/actions/EventFrame_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_DeleteSecurityEntry": {
            "main": "./lib/actions/EventFrame_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_GetSecurityEntryByName": {
            "main": "./lib/actions/EventFrame_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the event frame with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EventFrame_UpdateSecurityEntry": {
            "main": "./lib/actions/EventFrame_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the event frame.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/EventFrame_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Point_GetByPath": {
            "main": "./lib/actions/Point_GetByPath.js",
            "title": "Get a point by path.",
            "description": "This method returns a PI Point based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Point_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Point_GetMultiple": {
            "main": "./lib/actions/Point_GetMultiple.js",
            "title": "Retrieve multiple points by web id or path.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Point_GetMultiple.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Point_Delete": {
            "main": "./lib/actions/Point_Delete.js",
            "title": "Delete a point.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Point_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Point_Get": {
            "main": "./lib/actions/Point_Get.js",
            "title": "Get a point.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Point_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Point_Update": {
            "main": "./lib/actions/Point_Update.js",
            "title": "Update a point.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Point_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Point_GetAttributes": {
            "main": "./lib/actions/Point_GetAttributes.js",
            "title": "Get point attributes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Point_GetAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Point_GetAttributeByName": {
            "main": "./lib/actions/Point_GetAttributeByName.js",
            "title": "Get a point attribute by name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Point_GetAttributeByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityIdentity_GetByPath": {
            "main": "./lib/actions/SecurityIdentity_GetByPath.js",
            "title": "Retrieve a security identity by path.",
            "description": "This method returns a security identity based on the path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityIdentity_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityIdentity_Delete": {
            "main": "./lib/actions/SecurityIdentity_Delete.js",
            "title": "Delete a security identity.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityIdentity_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityIdentity_Get": {
            "main": "./lib/actions/SecurityIdentity_Get.js",
            "title": "Retrieve a security identity.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityIdentity_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityIdentity_Update": {
            "main": "./lib/actions/SecurityIdentity_Update.js",
            "title": "Update a security identity by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityIdentity_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityIdentity_GetSecurity": {
            "main": "./lib/actions/SecurityIdentity_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the security identity for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityIdentity_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityIdentity_GetSecurityEntries": {
            "main": "./lib/actions/SecurityIdentity_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the security identity based on the specified criteria. By default, all security entries for this security identity are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityIdentity_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityIdentity_GetSecurityEntryByName": {
            "main": "./lib/actions/SecurityIdentity_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the security identity with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityIdentity_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityIdentity_GetSecurityMappings": {
            "main": "./lib/actions/SecurityIdentity_GetSecurityMappings.js",
            "title": "Get security mappings for the specified security identity.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityIdentity_GetSecurityMappings.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityMapping_GetByPath": {
            "main": "./lib/actions/SecurityMapping_GetByPath.js",
            "title": "Retrieve a security mapping by path.",
            "description": "This method returns a security mapping based on the path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityMapping_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityMapping_Delete": {
            "main": "./lib/actions/SecurityMapping_Delete.js",
            "title": "Delete a security mapping.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityMapping_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityMapping_Get": {
            "main": "./lib/actions/SecurityMapping_Get.js",
            "title": "Retrieve a security mapping.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityMapping_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityMapping_Update": {
            "main": "./lib/actions/SecurityMapping_Update.js",
            "title": "Update a security mapping by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityMapping_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityMapping_GetSecurity": {
            "main": "./lib/actions/SecurityMapping_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the security mapping for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityMapping_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityMapping_GetSecurityEntries": {
            "main": "./lib/actions/SecurityMapping_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the security mapping based on the specified criteria. By default, all security entries for this security mapping are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityMapping_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SecurityMapping_GetSecurityEntryByName": {
            "main": "./lib/actions/SecurityMapping_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the security mapping with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SecurityMapping_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_GetChannel": {
            "main": "./lib/actions/Stream_GetChannel.js",
            "title": "Opens a channel that will send messages about any value changes for the specified stream.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_GetChannel.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_GetEnd": {
            "main": "./lib/actions/Stream_GetEnd.js",
            "title": "Returns the end-of-stream value of the stream.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_GetEnd.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_GetInterpolated": {
            "main": "./lib/actions/Stream_GetInterpolated.js",
            "title": "Retrieves interpolated values over the specified time range at the specified sampling interval.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_GetInterpolated.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_GetInterpolatedAtTimes": {
            "main": "./lib/actions/Stream_GetInterpolatedAtTimes.js",
            "title": "Retrieves interpolated values over the specified time range at the specified sampling interval.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_GetInterpolatedAtTimes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_GetPlot": {
            "main": "./lib/actions/Stream_GetPlot.js",
            "title": "Retrieves values over the specified time range suitable for plotting over the number of intervals (typically represents pixels).",
            "description": "For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_GetPlot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_GetRecorded": {
            "main": "./lib/actions/Stream_GetRecorded.js",
            "title": "Returns a list of compressed values for the requested time range from the source provider.",
            "description": "Returned times are affected by the specified boundary type. If no values are found for the time range and conditions specified then the HTTP response will be success, with a body containing an empty array of Items. When specifying true for the includeFilteredValues parameter, consecutive filtered events are not returned. The first value that would be filtered out is returned with its time and the enumeration value \"Filtered\". The next value in the collection will be the next compressed value in the specified direction that passes the filter criteria - if any. When both boundaryType and a filterExpression are specified, the events returned for the boundary condition specified are passed through the filter. If the includeFilteredValues parameter is true, the boundary values will be reported at the proper timestamps with the enumeration value \"Filtered\" when the filter conditions are not met at the boundary time. If the includeFilteredValues parameter is false for this case, no event is returned for the boundary time.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_GetRecorded.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_UpdateValues": {
            "main": "./lib/actions/Stream_UpdateValues.js",
            "title": "Updates multiple values for the specified stream.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_UpdateValues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_GetRecordedAtTime": {
            "main": "./lib/actions/Stream_GetRecordedAtTime.js",
            "title": "Returns a single recorded value based on the passed time and retrieval mode from the stream.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_GetRecordedAtTime.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_GetRecordedAtTimes": {
            "main": "./lib/actions/Stream_GetRecordedAtTimes.js",
            "title": "Retrieves recorded values at the specified times.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_GetRecordedAtTimes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_GetSummary": {
            "main": "./lib/actions/Stream_GetSummary.js",
            "title": "Returns a summary over the specified time range for the stream.",
            "description": "Count is the only summary type supported on non-numeric streams. Requesting a summary for any other type will generate an error. Time-weighted totals are computed by integrating the rate tag values over the requested time range. If some of the data are bad in the time range, the calculated total is divided by the fraction of the time period for which there are good values. This approach is equivalent to assuming that during the period of bad data, the tag takes on the average values for the entire calculation time range. The PercentGood summary may be used to determine if the calculation results are suitable for the application's purposes. For time-weighted totals, if the time unit rate of the stream cannot be determined, then the value will be totaled assuming a unit of \"per day\" and no unit of measure will be assigned to the value. If the measured time component of the tag is not based on a day, the user of the data must convert the totalized value to the correct units.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_GetSummary.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_GetValue": {
            "main": "./lib/actions/Stream_GetValue.js",
            "title": "Returns the value of the stream at the specified time. By default, this is usually the current value.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_GetValue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Stream_UpdateValue": {
            "main": "./lib/actions/Stream_UpdateValue.js",
            "title": "Updates a value for the specified stream.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Stream_UpdateValue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetChannelAdHoc": {
            "main": "./lib/actions/StreamSet_GetChannelAdHoc.js",
            "title": "Opens a channel that will send messages about any value changes for the specified streams.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetChannelAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetEndAdHoc": {
            "main": "./lib/actions/StreamSet_GetEndAdHoc.js",
            "title": "Returns End Of Stream values for attributes of the specified streams",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetEndAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetInterpolatedAdHoc": {
            "main": "./lib/actions/StreamSet_GetInterpolatedAdHoc.js",
            "title": "Returns interpolated values of the specified streams over the specified time range at the specified sampling interval.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetInterpolatedAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetInterpolatedAtTimesAdHoc": {
            "main": "./lib/actions/StreamSet_GetInterpolatedAtTimesAdHoc.js",
            "title": "Returns interpolated values of the specified streams at the specified times.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetInterpolatedAtTimesAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetPlotAdHoc": {
            "main": "./lib/actions/StreamSet_GetPlotAdHoc.js",
            "title": "Returns values of attributes for the specified streams over the specified time range suitable for plotting over the number of intervals (typically represents pixels).",
            "description": "For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetPlotAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetRecordedAdHoc": {
            "main": "./lib/actions/StreamSet_GetRecordedAdHoc.js",
            "title": "Returns recorded values of the specified streams.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetRecordedAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_UpdateValuesAdHoc": {
            "main": "./lib/actions/StreamSet_UpdateValuesAdHoc.js",
            "title": "Updates multiple values for the specified streams.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_UpdateValuesAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetRecordedAtTimeAdHoc": {
            "main": "./lib/actions/StreamSet_GetRecordedAtTimeAdHoc.js",
            "title": "Returns recorded values based on the passed time and retrieval mode.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetRecordedAtTimeAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetRecordedAtTimesAdHoc": {
            "main": "./lib/actions/StreamSet_GetRecordedAtTimesAdHoc.js",
            "title": "Returns recorded values of the specified streams at the specified times.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetRecordedAtTimesAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetSummariesAdHoc": {
            "main": "./lib/actions/StreamSet_GetSummariesAdHoc.js",
            "title": "Returns summary values of the specified streams.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetSummariesAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetValuesAdHoc": {
            "main": "./lib/actions/StreamSet_GetValuesAdHoc.js",
            "title": "Returns values of the specified streams.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetValuesAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_UpdateValueAdHoc": {
            "main": "./lib/actions/StreamSet_UpdateValueAdHoc.js",
            "title": "Updates a single value for the specified streams.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_UpdateValueAdHoc.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetChannel": {
            "main": "./lib/actions/StreamSet_GetChannel.js",
            "title": "Opens a channel that will send messages about any value changes for the attributes of an Element, Event Frame, or Attribute.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetChannel.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetEnd": {
            "main": "./lib/actions/StreamSet_GetEnd.js",
            "title": "Returns End of stream values of the attributes for an Element, Event Frame or Attribute",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetEnd.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetInterpolated": {
            "main": "./lib/actions/StreamSet_GetInterpolated.js",
            "title": "Returns interpolated values of attributes for an element, event frame or attribute over the specified time range at the specified sampling interval.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetInterpolated.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetInterpolatedAtTimes": {
            "main": "./lib/actions/StreamSet_GetInterpolatedAtTimes.js",
            "title": "Returns interpolated values of attributes for an element, event frame or attribute at the specified times.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetInterpolatedAtTimes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetPlot": {
            "main": "./lib/actions/StreamSet_GetPlot.js",
            "title": "Returns values of attributes for an element, event frame or attribute over the specified time range suitable for plotting over the number of intervals (typically represents pixels).",
            "description": "For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetPlot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetRecorded": {
            "main": "./lib/actions/StreamSet_GetRecorded.js",
            "title": "Returns recorded values of the attributes for an element, event frame, or attribute.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetRecorded.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_UpdateValues": {
            "main": "./lib/actions/StreamSet_UpdateValues.js",
            "title": "Updates multiple values for the specified streams.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_UpdateValues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetRecordedAtTime": {
            "main": "./lib/actions/StreamSet_GetRecordedAtTime.js",
            "title": "Returns recorded values of the attributes for an element, event frame, or attribute.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetRecordedAtTime.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetRecordedAtTimes": {
            "main": "./lib/actions/StreamSet_GetRecordedAtTimes.js",
            "title": "Returns recorded values of attributes for an element, event frame or attribute at the specified times.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetRecordedAtTimes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetSummaries": {
            "main": "./lib/actions/StreamSet_GetSummaries.js",
            "title": "Returns summary values of the attributes for an element, event frame or attribute.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetSummaries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_GetValues": {
            "main": "./lib/actions/StreamSet_GetValues.js",
            "title": "Returns values of the attributes for an Element, Event Frame or Attribute at the specified time.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_GetValues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StreamSet_UpdateValue": {
            "main": "./lib/actions/StreamSet_UpdateValue.js",
            "title": "Updates a single value for the specified streams.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/StreamSet_UpdateValue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "System_Landing": {
            "main": "./lib/actions/System_Landing.js",
            "title": "Get system links for this PI System Web API instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/System_Landing.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "System_CacheInstances": {
            "main": "./lib/actions/System_CacheInstances.js",
            "title": "Get AF cache instances currently in use by the system. These are caches from which user requests are serviced. The number of instances depends on the number of users connected to the service, the service's authentication method, and the cache instance configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/System_CacheInstances.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Configuration_List": {
            "main": "./lib/actions/Configuration_List.js",
            "title": "Get the current system configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Configuration_List.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Configuration_Delete": {
            "main": "./lib/actions/Configuration_Delete.js",
            "title": "Delete a configuration item.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Configuration_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Configuration_Get": {
            "main": "./lib/actions/Configuration_Get.js",
            "title": "Get the value of a configuration item.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Configuration_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "System_Status": {
            "main": "./lib/actions/System_Status.js",
            "title": "Get the system uptime, the system state and the number of cache instances for this PI System Web API instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/System_Status.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "System_UserInfo": {
            "main": "./lib/actions/System_UserInfo.js",
            "title": "Get information about the Windows identity used to fulfill the request. This depends on the service's authentication method and the credentials passed by the client. The impersonation level of the Windows identity is included.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/System_UserInfo.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "System_Versions": {
            "main": "./lib/actions/System_Versions.js",
            "title": "Get the current versions of the PI Web API instance and all external plugins.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/System_Versions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TableCategory_GetByPath": {
            "main": "./lib/actions/TableCategory_GetByPath.js",
            "title": "Retrieve a table category by path.",
            "description": "This method returns a Table Category based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TableCategory_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TableCategory_Delete": {
            "main": "./lib/actions/TableCategory_Delete.js",
            "title": "Delete a table category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TableCategory_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TableCategory_Get": {
            "main": "./lib/actions/TableCategory_Get.js",
            "title": "Retrieve a table category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TableCategory_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TableCategory_Update": {
            "main": "./lib/actions/TableCategory_Update.js",
            "title": "Update a table category by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/TableCategory_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TableCategory_GetSecurity": {
            "main": "./lib/actions/TableCategory_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the table category for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TableCategory_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TableCategory_GetSecurityEntries": {
            "main": "./lib/actions/TableCategory_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the table category based on the specified criteria. By default, all security entries for this table category are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TableCategory_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TableCategory_CreateSecurityEntry": {
            "main": "./lib/actions/TableCategory_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the table category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/TableCategory_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TableCategory_DeleteSecurityEntry": {
            "main": "./lib/actions/TableCategory_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the table category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TableCategory_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TableCategory_GetSecurityEntryByName": {
            "main": "./lib/actions/TableCategory_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the table category with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TableCategory_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TableCategory_UpdateSecurityEntry": {
            "main": "./lib/actions/TableCategory_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the table category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/TableCategory_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_GetByPath": {
            "main": "./lib/actions/Table_GetByPath.js",
            "title": "Retrieve a table by path.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_Delete": {
            "main": "./lib/actions/Table_Delete.js",
            "title": "Delete a table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_Get": {
            "main": "./lib/actions/Table_Get.js",
            "title": "Retrieve a table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_Update": {
            "main": "./lib/actions/Table_Update.js",
            "title": "Update a table by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_GetCategories": {
            "main": "./lib/actions/Table_GetCategories.js",
            "title": "Get a table's categories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_GetCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_GetData": {
            "main": "./lib/actions/Table_GetData.js",
            "title": "Get the table's data.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_GetData.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_UpdateData": {
            "main": "./lib/actions/Table_UpdateData.js",
            "title": "Update the table's data.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_UpdateData.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_GetSecurity": {
            "main": "./lib/actions/Table_GetSecurity.js",
            "title": "Get the security information of the specified security item associated with the table for a specified user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_GetSecurity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_GetSecurityEntries": {
            "main": "./lib/actions/Table_GetSecurityEntries.js",
            "title": "Retrieve the security entries associated with the table based on the specified criteria. By default, all security entries for this table are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_GetSecurityEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_CreateSecurityEntry": {
            "main": "./lib/actions/Table_CreateSecurityEntry.js",
            "title": "Create a security entry owned by the table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_CreateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_DeleteSecurityEntry": {
            "main": "./lib/actions/Table_DeleteSecurityEntry.js",
            "title": "Delete a security entry owned by the table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_DeleteSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_GetSecurityEntryByName": {
            "main": "./lib/actions/Table_GetSecurityEntryByName.js",
            "title": "Retrieve the security entry associated with the table with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_GetSecurityEntryByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Table_UpdateSecurityEntry": {
            "main": "./lib/actions/Table_UpdateSecurityEntry.js",
            "title": "Update a security entry owned by the table.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Table_UpdateSecurityEntry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TimeRulePlugIn_GetByPath": {
            "main": "./lib/actions/TimeRulePlugIn_GetByPath.js",
            "title": "Retrieve a Time Rule Plug-in by path.",
            "description": "This method returns a Time Rule Plug-in based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeRulePlugIn_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TimeRulePlugIn_Get": {
            "main": "./lib/actions/TimeRulePlugIn_Get.js",
            "title": "Retrieve a Time Rule Plug-in.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeRulePlugIn_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TimeRule_GetByPath": {
            "main": "./lib/actions/TimeRule_GetByPath.js",
            "title": "Retrieve a Time Rule by path.",
            "description": "This method returns a Time Rule based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeRule_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TimeRule_Delete": {
            "main": "./lib/actions/TimeRule_Delete.js",
            "title": "Delete a Time Rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeRule_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TimeRule_Get": {
            "main": "./lib/actions/TimeRule_Get.js",
            "title": "Retrieve a Time Rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeRule_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TimeRule_Update": {
            "main": "./lib/actions/TimeRule_Update.js",
            "title": "Update a Time Rule by replacing items in its definition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeRule_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UnitClass_GetByPath": {
            "main": "./lib/actions/UnitClass_GetByPath.js",
            "title": "Retrieve a unit class by path.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UnitClass_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UnitClass_Delete": {
            "main": "./lib/actions/UnitClass_Delete.js",
            "title": "Delete a unit class.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UnitClass_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UnitClass_Get": {
            "main": "./lib/actions/UnitClass_Get.js",
            "title": "Retrieve a unit class.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UnitClass_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UnitClass_Update": {
            "main": "./lib/actions/UnitClass_Update.js",
            "title": "Update a unit class.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/UnitClass_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UnitClass_GetCanonicalUnit": {
            "main": "./lib/actions/UnitClass_GetCanonicalUnit.js",
            "title": "Get the canonical unit of a unit class.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UnitClass_GetCanonicalUnit.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UnitClass_GetUnits": {
            "main": "./lib/actions/UnitClass_GetUnits.js",
            "title": "Get a list of all units belonging to the unit class.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UnitClass_GetUnits.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UnitClass_CreateUnit": {
            "main": "./lib/actions/UnitClass_CreateUnit.js",
            "title": "Create a unit in the specified Unit Class.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/UnitClass_CreateUnit.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Unit_GetByPath": {
            "main": "./lib/actions/Unit_GetByPath.js",
            "title": "Retrieve a unit by path.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Unit_GetByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Unit_Delete": {
            "main": "./lib/actions/Unit_Delete.js",
            "title": "Delete a unit.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Unit_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Unit_Get": {
            "main": "./lib/actions/Unit_Get.js",
            "title": "Retrieve a unit.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Unit_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Unit_Update": {
            "main": "./lib/actions/Unit_Update.js",
            "title": "Update a unit.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Unit_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}